package simpleGame.cli;

//It is recommended to import Mockito statically so that the code looks clearer
import static org.mockito.Mockito.*;

//Eclipse might not find this one automatically:
import org.mockito.runners.MockitoJUnitRunner;

import simpleGame.cli.*;
import simpleGame.core.Board;
import simpleGame.core.Direction;
import simpleGame.core.Pawn;
import simpleGame.exception.OutOfBoardException;

import static org.junit.Assert.*;

import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(MockitoJUnitRunner.class) // This is required for mocks to work
public class TestSequenceDiagram {
	
	@Test
	public void isGameOverTest(){
		//Initialisation d'un Board
        Board myBoard = new Board(1, 6, 6, 3, 3);
        myBoard.removeAllPawns();
        
        //mock d'un Pawn en position 1x4 avec gold=7
		Pawn mockPawn1 = mock(Pawn.class);
        when(mockPawn1.getX()).thenReturn(1);
        when(mockPawn1.getY()).thenReturn(4);
        when(mockPawn1.getGold()).thenReturn(7);
        
        //mock d'un Pawn en position 3x4 avec gold=6
		Pawn mockPawn2 = mock(Pawn.class);
        when(mockPawn2.getX()).thenReturn(3);
        when(mockPawn2.getY()).thenReturn(4);
        when(mockPawn2.getGold()).thenReturn(6);
        
        //Ajout des deux Pawns
        myBoard.addPawn(mockPawn2);
        myBoard.addPawn(mockPawn1);
		
	}

}
